version: '3.8'

services:
  #  dev:
  #    container_name: dreamld-dev
  #    image: dreamld-dev:1.0.0
  #    build:
  #      context: .
  #      target: development
  #      dockerfile: ./Dockerfile
  #    command: yarn start:dev
  #    ports:
  #      - ${PORT}:${PORT}
  #    networks:
  #      - nestjs-network
  #    volumes:
  #      - .:/usr/src/app
  #      - /usr/src/app/node_modules
  #    depends_on:
  #      - db
  #      - redis
  #    links:
  #      - db:db
  #      - redis:redis
  #    restart: unless-stopped
  #    env_file:
  #      - .env

  # prod:
  #   container_name: dreamld_prod
  #   image: dreamld-prod:1.0.0
  #   build:
  #     context: .
  #     target: production
  #     dockerfile: ./Dockerfile
  #   command: yarn start:prod
  #   ports:
  #     - ${PORT}:${PORT}
  #   networks:
  #     - nestjs-network
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   depends_on:
  #     - db
  #     - redis
  #   links:
  #     - db:db
  #     - redis:redis
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  db:
    container_name: database
    image: postgres:13.6-alpine
    restart: always
    environment:
      TZ: 'Asia/Ho_Chi_Minh'
      PGTZ: 'Asia/Ho_Chi_Minh'
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    ports:
      - ${DB_PORT}:5432
    networks:
      - nestjs-network
    volumes:
      - ./docker/db/postgres/data/:/var/lib/postgresql/data
      - ./docker/db/postgres/postgres.conf:/etc/postgresql/postgresql.conf
      - ./docker/db/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./docker/db/postgres/init/:/docker-entrypoint-initdb.d
    env_file:
      - .env

  # redis ------------------------------------------
  redis:
    container_name: redis
    image: redis:6.2.5-alpine
    restart: always
    ports:
      - ${REDIS_PORT}:6379
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - nestjs-network
    env_file:
      - .env
  #   command: sh -c "chmod +x /usr/local/bin/entrypoint.sh && /usr/local/bin/entrypoint.sh"
  #   volumes:
  #     - ./docker/redis/entrypoint.sh:/usr/local/bin/entrypoint.sh
  #   depends_on:
  #     - redis-cli

  # redis-cli:
  #   image: redis:6.2.5-alpine
  #   entrypoint: ['tail', '-f', '/dev/null']
  #   networks:
  #     - nestjs-network

networks:
  nestjs-network:
    driver: bridge
